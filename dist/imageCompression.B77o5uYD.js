function w(a){return new Promise((r,c)=>{const e=new Image;e.onload=()=>r(e),e.onerror=c;const t=URL.createObjectURL(a);e.src=t})}function p(a,r,c){const e=document.createElement("canvas");let{width:t,height:o}=a;const n=Math.min(1,r/t||1,c/o||1);return t=Math.max(1,Math.round(t*n)),o=Math.max(1,Math.round(o*n)),e.width=t,e.height=o,e.getContext("2d").drawImage(a,0,0,t,o),e}async function d(a,r,c,e,t=.3){async function o(s){return await new Promise(m=>a.toBlob(m,r,s))}let n=c,i=await o(n);if(!i)throw new Error("Compression failed");for(;e&&i.size>e&&n>t;){n=Math.max(t,n-.1);const s=await o(n);if(!s||(i=s,n<=t))break}return i}async function g(a,{maxWidth:r=1600,maxHeight:c=1600,quality:e=.8,mimeType:t="image/jpeg",maxBytes:o=0,asFile:n=!0,outName:i}={}){const s=await w(a),m=p(s,r,c),h=await d(m,t,e,o);if(n){const u=i||(a.name?a.name.replace(/\.[^.]+$/,"")+".jpg":"image.jpg");return new File([h],u,{type:t,lastModified:Date.now()})}return await new Promise(u=>{u(m.toDataURL(t,Math.min(e,.92)))})}async function l(a){return g(a,{maxWidth:512,maxHeight:512,quality:.8,mimeType:"image/jpeg",maxBytes:200*1024,asFile:!0,outName:(a.name?a.name.replace(/\.[^.]+$/,""):"avatar")+".jpg"})}async function x(a){return g(a,{maxWidth:1920,maxHeight:1080,quality:.82,mimeType:"image/jpeg",maxBytes:600*1024,asFile:!0,outName:(a.name?a.name.replace(/\.[^.]+$/,""):"cover")+".jpg"})}export{x as a,l as c};
